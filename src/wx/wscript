import os
import glob
from waflib import Logs
import i18n

sources = """
          about_dialog.cc
          audio_dialog.cc
          audio_plot.cc
          config_dialog.cc
          dci_metadata_dialog.cc
          dir_picker_ctrl.cc
          film_editor.cc
          film_viewer.cc
          filter_dialog.cc
          filter_view.cc
          gain_calculator_dialog.cc
          job_manager_view.cc
          job_wrapper.cc
          new_film_dialog.cc
          properties_dialog.cc
          server_dialog.cc
          wx_util.cc
          wx_ui_signaller.cc
          """

def configure(conf):
    wx_args = '--cppflags --cxxflags --libs'
    if conf.env.STATIC:
        wx_args += ' --static'

    conf.check_cfg(msg='Checking for wxWidgets', package='', path=conf.options.wx_config, args=wx_args
                   uselib_store='WXWIDGETS', mandatory=True)
 
    if conf.env.STATIC:
        # wx-config returns its static libraries as full paths, without -l prefixes, which I think confuses
        # check_cfg(), so it ends up putting these libraries before even the .cc file when linking.
        # This hack works around that.
        conf.env.STLIB_WXWIDGETS = ['wx_gtk2u_xrc-2.9', 'wx_gtk2u_qa-2.9', 'wx_baseu_net-2.9', 'wx_gtk2u_html-2.9',
                                    'wx_gtk2u_adv-2.9', 'wx_gtk2u_core-2.9', 'wx_baseu_xml-2.9', 'wx_baseu-2.9']

    conf.in_msg = 1
    wx_version = conf.check_cfg(package='', path=conf.options.wx_config, args='--version').strip()
    conf.im_msg = 0
    if wx_version != '2.9.4':
        conf.fatal('wxwidgets version 2.9.4 is required; %s found' % wx_version)

def build(bld):
    if bld.env.STATIC:
        obj = bld(features = 'cxx cxxstlib')
    else:
        obj = bld(features = 'cxx cxxshlib')

    obj.name   = 'libdvdomatic-wx'
    obj.includes = [ '..' ]
    obj.export_includes = ['.']
    obj.uselib = 'WXWIDGETS'
    if bld.env.TARGET_LINUX:
        obj.uselib += ' GTK'
    obj.use = 'libdvdomatic'
    obj.source = sources
    obj.target = 'dvdomatic-wx'

    i18n.po_to_mo(os.path.join('src', 'wx'), 'libdvdomatic-wx', bld)

def pot(bld):
    i18n.pot(os.path.join('src', 'wx'), sources, 'libdvdomatic-wx')

def pot_merge(bld):
    i18n.pot_merge(os.path.join('src', 'wx'), 'libdvdomatic-wx')
