import os
import glob
from waflib import Logs
import i18n

def configure(conf):
    if conf.env.TARGET_WINDOWS:
        conf.env.append_value('CXXFLAGS', ['-mconsole'])
        conf.env.append_value('LINKFLAGS', ['-mconsole'])

def build(bld):
    for t in ['dcpomatic_cli', 'dcpomatic_server_cli', 'server_test', 'dcpomatic_kdm', 'dcpomatic_create']:
        obj = bld(features = 'cxx cxxprogram')
        obj.uselib = 'BOOST_THREAD BOOST_DATETIME OPENJPEG DCP CXML AVFORMAT AVFILTER AVCODEC AVUTIL SWSCALE POSTPROC WXWIDGETS QUICKMAIL SUB'
        obj.includes = ['..']
        obj.use    = ['libdcpomatic2']
        obj.source = '%s.cc' % t
        obj.target = t.replace('dcpomatic', 'dcpomatic2')
        if t == 'server_test':
            obj.install_path = None

    if not bld.env.DISABLE_GUI:
        for t in ['dcpomatic', 'dcpomatic_batch', 'dcpomatic_server']:
            obj = bld(features = 'cxx cxxprogram')
            obj.uselib = 'BOOST_THREAD BOOST_DATETIME OPENJPEG DCP CXML AVFORMAT AVFILTER AVCODEC AVUTIL SWSCALE POSTPROC CXML WXWIDGETS QUICKMAIL SUB'
            if bld.env.BUILD_STATIC:
                obj.uselib += ' GTK'
            obj.includes = ['..']
            obj.use    = ['libdcpomatic2', 'libdcpomatic2-wx']
            obj.source = '%s.cc' % t
            if bld.env.TARGET_WINDOWS:
                obj.source += ' ../../platform/windows/dcpomatic.rc'
            obj.target = t.replace('dcpomatic', 'dcpomatic2')

        i18n.po_to_mo(os.path.join('src', 'tools'), 'dcpomatic2', bld)

def pot(bld):
    i18n.pot(os.path.join('src', 'tools'), 'dcpomatic.cc dcpomatic_batch.cc', 'dcpomatic')

def pot_merge(bld):
    i18n.pot_merge(os.path.join('src', 'tools'), 'dcpomatic')
