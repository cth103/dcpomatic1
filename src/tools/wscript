#
#    Copyright (C) 2012-2015 Carl Hetherington <cth@carlh.net>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#

import os
import glob
from waflib import Logs
import i18n

def configure(conf):
    if conf.env.TARGET_WINDOWS:
        conf.env.append_value('CXXFLAGS', ['-mconsole'])
        conf.env.append_value('LINKFLAGS', ['-mconsole'])

def build(bld):
    uselib =  'BOOST_THREAD BOOST_DATETIME OPENJPEG DCP XMLSEC CXML XMLPP AVFORMAT AVFILTER AVCODEC '
    uselib += 'AVUTIL SWSCALE POSTPROC CURL BOOST_FILESYSTEM SSH WXWIDGETS ZIP CAIROMM PANGOMM SUB MAGICK SNDFILE '

    if bld.env.TARGET_WINDOWS:
        uselib += 'WINSOCK2'

    for t in ['dcpomatic_cli', 'dcpomatic_server_cli', 'server_test', 'dcpomatic_kdm', 'dcpomatic_create']:
        obj = bld(features = 'cxx cxxprogram')
        obj.uselib = uselib
        obj.includes = ['..']
        obj.use    = ['libdcpomatic2']
        obj.source = '%s.cc' % t
        obj.target = t.replace('dcpomatic', 'dcpomatic2')
        if t == 'server_test':
            obj.install_path = None

    if not bld.env.DISABLE_GUI:
        for t in ['dcpomatic', 'dcpomatic_batch', 'dcpomatic_server']:
            obj = bld(features = 'cxx cxxprogram')
            obj.uselib = uselib
            if bld.env.BUILD_STATIC or bld.env.TARGET_LINUX:
                obj.uselib += ' GTK'
            obj.includes = ['..']
            obj.use    = ['libdcpomatic2', 'libdcpomatic2-wx']
            obj.source = '%s.cc' % t
            if bld.env.TARGET_WINDOWS:
                obj.source += ' ../../platform/windows/dcpomatic.rc'
            obj.target = t.replace('dcpomatic', 'dcpomatic2')

        i18n.po_to_mo(os.path.join('src', 'tools'), 'dcpomatic2', bld)

def pot(bld):
    i18n.pot(os.path.join('src', 'tools'), 'dcpomatic.cc dcpomatic_batch.cc', 'dcpomatic')

def pot_merge(bld):
    i18n.pot_merge(os.path.join('src', 'tools'), 'dcpomatic')
