def configure(conf):
    boost_test_suffix=''
    if conf.env.TARGET_WINDOWS:
        boost_test_suffix='-mt'

    conf.check_cxx(fragment = """
                              #define BOOST_TEST_MODULE Config test\n
    			      #include <boost/test/unit_test.hpp>\n
                              int main() {}
                              """, msg = 'Checking for boost unit testing library', lib = 'boost_unit_test_framework%s' % boost_test_suffix, uselib_store = 'BOOST_TEST')

def build(bld):
    obj = bld(features='cxx cxxprogram')
    obj.name   = 'unit-tests'
    obj.uselib = 'BOOST_TEST BOOST_THREAD DCP OPENJPEG AVFORMAT AVFILTER AVCODEC AVUTIL SWSCALE POSTPROC CXML'
    obj.use    = 'libdcpomatic'
    obj.source = """
                 4k_test.cc
                 audio_analysis_test.cc
                 audio_buffers_test.cc
                 audio_delay_test.cc
                 audio_decoder_test.cc
                 audio_filter_test.cc
                 audio_mapping_test.cc
                 black_fill_test.cc
                 burnt_subtitle_test.cc
                 client_server_test.cc
                 colour_conversion_test.cc
                 dcp_subtitle_test.cc
                 ffmpeg_audio_test.cc
                 ffmpeg_dcp_test.cc
                 ffmpeg_decoder_seek_test.cc
                 ffmpeg_decoder_sequential_test.cc
                 ffmpeg_examiner_test.cc
                 ffmpeg_pts_offset_test.cc
                 file_group_test.cc
                 film_metadata_test.cc
                 frame_rate_test.cc
                 image_test.cc
                 isdcf_name_test.cc
                 job_test.cc
                 make_black_test.cc
                 player_test.cc
                 pixel_formats_test.cc
                 ratio_test.cc
                 repeat_frame_test.cc
                 recover_test.cc
                 resampler_test.cc
                 scaling_test.cc
                 seek_zero_test.cc
                 silence_padding_test.cc
                 skip_frame_test.cc
                 stream_test.cc
                 subrip_test.cc
                 test.cc
                 threed_test.cc
                 util_test.cc
                 xml_subtitle_test.cc
                 """

    obj.target = 'unit-tests'
    obj.install_path = ''

    obj = bld(features='cxx cxxprogram')
    obj.name   = 'long-unit-tests'
    obj.uselib = 'BOOST_TEST DCP OPENJPEG AVFORMAT AVFILTER AVCODEC AVUTIL SWSCALE POSTPROC CXML'
    obj.use    = 'libdcpomatic'
    obj.source = """
                 test.cc
                 """

    obj.target = 'long-unit-tests'
    obj.install_path = ''
